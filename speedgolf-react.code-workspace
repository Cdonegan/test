{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		"textmarker.savedHighlights": [
			{
				"pattern": {
					"type": "string",
					"expression": "<title>SpeedScore</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n  </body>",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavBar title=\"Welcome to SpeedScore\"/>\r\n      <SideMenu />\r\n      <ModeBar />\r\n      <FloatingButton />\r\n      <LoginPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass NavBar extends React.Component {\r\n    \r\n    render() {\r\n       return (\r\n        <div id=\"navBar\" className=\"navbar\">  \r\n        <span className=\"navbarItems\">\r\n          <button id=\"menuBtn\" className=\"menubtn\">\r\n            <span id=\"menuBtnIcon\" className=\"fa fa-bars menubtnicon\">\r\n            </span>\r\n          </button>\r\n          <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n          width=\"38px\" />\r\n          <span id=\"topBarTitle\" className=\"navbartitle\">\r\n            &nbsp;{this.props.title}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default NavBar;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "class SideMenu extends React.Component {\r\n    render() {\r\n       return (\r\n        <div id=\"sideMenu\" className=\"sidenav\" >\r\n        {/* SIDE MENU TITLE */}\r\n        <div className=\"sidenavtitle\">\r\n            <img src='http://tiny.cc/chrisprofilepic' height='50' width='50' />\r\n            <span id=\"userID\" className=\"sidenavuserID\">&nbsp;Chris\r\n            Hundhausen&nbsp;&nbsp;</span>\r\n        </div>\r\n        {/* MENU CONTENT */}\r\n        <div id=\"mainMenuContent\">\r\n        <h2></h2>\r\n        {/*BEGIN GROUP OF MODE/ACTION BUTTONS */}\r\n        {/*Mode-based menu items are contextual; they provide\r\n            easy access to most important functionality in current mode */}\r\n        <a className=\"feedModeItem menuItem modeItem\">\r\n          <span className=\"fa fa-list-alt\"></span>&nbsp;Feed</a>\r\n        <a className=\"feedModeItem menuItem modeItem\">\r\n          <span className=\"fa fa-user-friends\"></span>&nbsp;Followed Users</a>\r\n        <a id=\"allRoundsItem\" className=\"roundsModeItem menuItem modeItem\">\r\n          <span className=\"fa fa-history\"></span>&nbsp;All Rounds</a>\r\n        <a id=\"logRoundItem\" className=\"roundsModeItem menuItem modeItem\">\r\n          <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n        <a className=\"coursesModeItem menuItem modeItem\" >\r\n          <span className=\"fa fa-flag\"></span>&nbsp;All Courses</a>\r\n        <a className=\"coursesModeItem menuItem modeItem\">\r\n          <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        {/* The following menu items are present regardless of mode */}\r\n        <a id=\"aboutBtn\" className=\"menuItem\">\r\n          <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n        <a id=\"logOutBtn\" className=\"menuItem\">\r\n          <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div id =\"bottomBar\" className=\"modebar\">\r\n        <a id=\"feedMode\" className=\"modebarbtn\">\r\n          <span className=\"modebaricon nonMenuItem fa fa-th-list\"></span>\r\n          <span className=\"modebartext\">Feed</span>\r\n        </a>\r\n        <a id=\"roundsMode\" className=\"modebarbtn\">\r\n          <span className=\"modebaricon nonMenuItem fa fa-history\"></span>\r\n          <span className=\"modebartext\">Rounds</span>\r\n        </a>\r\n        <a id=\"coursesMode\" className=\"modebarbtn\">\r\n          <span className=\"modebaricon nonMenuItem fa fa-flag\"></span>\r\n          <span className=\"modebartext\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "/* Styling of the fixed top bar in the app */\n.navbar {\n  overflow: hidden; /* Don't allow scrolling */\n  display: block; /* Occupies its own horizontal space */\n  background-color: #13294E;\n  position: fixed; /* Doesn't move */\n  top: 0;\n  width: 100%; /* 100% of width of screen */\n  align-content: center;\n  border-radius: 0px;\n  padding: 0px;\n  z-index: 100; /* Force it to be on top */\n}\n\n.navbartitle {\ncolor: white;\nfont-size: 18px;\n}\n\n/* navbarItems defines styling of items within navbar. They should be centered top-to-bottom\n with a small internal margin */\n.navbarItems {\ndisplay: inline-flex; \nalign-items: center; \npadding-top: 5px; \npadding-bottom: 5px;\n}\n\n/* sidenav -- Styling of the side navigation menu */\n.sidenav {\n  height: 100%; /* Menu is full height of window */\n  width: 0; /* Menu hidden -- will be opened on click */\n  position: fixed; /* Menu stays in place regardless of other content */\n  z-index: 150; /* Force the menu to be at front */\n  top: 48px; /* Position menu 48 px from top of screen; accomodates top navbar */\n  left: 0; /* Position the menu on the left hand side */\n  background-color: #13294E; /* Background color is dark blue */\n  overflow-x: hidden; /* Don't allow horizontal scroll */\n  transition: 0.5s; /* Animation transition time is 0.5 sec */\n  padding-top: 60px; /* Place menu content 60 px from top */\n}\n\n/* applies only to an anchor tag that's a child of a sidenav element. */\n.sidenav a {\n      padding: 16px 8px 16px 32px;\n      text-decoration: none;\n      font-size: 16px;\n      color: white;\n      display: block;\n      transition: 0.3s;\n  }\n  \n\n.sidenav div {\n      padding: 0px 0px 10px 6px;\n      text-decoration: none;\n      font-size: 16px;\n      color: white;\n      display: block;\n      transition: 0.3s;\n      /* border-bottom: 2px solid white; */\n  }\n\n/* Required ordering of link style definitions: visited, hover, active. If out of this order, they won't work!! */\n\n.sidenav a:visited {\nbackground-color:  #13294E !important;\ncolor: white !important;\n}\n\n.sidenav a:active {\nbackground-color:  #13294E !important;\ncolor: white !important;\n}\n\n\n/* Cascading style within a style: This definition applies only to sidenavtitle class defined in an \n element that's a child of sidenav element. */   \n.sidenav .sidenavtitle {\n      position: absolute;\n      width:100%;\n      top: 0px;\n      left: 0px;\n      padding: 0px 0px 0px 6px;\n      font-size: 18px;\n      margin-top: 20px;\n      margin-bottom: 20px !important;\n      border-bottom: 2px solid white;\n }\n\n .sidenav .sidenavuserID {\n   font-size: 14px;\n }\n\n/* side menu button styling */\n.menubtn {\nbackground-color: transparent;\nborder-color: #13294E;\ntext-align: center;\n}\n\n.menubtnicon {\ncolor: white;\nfont-size: 30px;\ncursor: pointer;\ntext-align: center;\n}\n\n\n.menuItem:hover {\n  cursor: default;\n  text-decoration: none;\n  color: #13294E !important;\n  background-color: #F0F0F0;\n}\n\n/* side menu styling when menu item selected */\n.menuItemSelected {\n       pointer-events: none;\n       cursor: default;\n       text-decoration: none;\n       color: #13294E !important;\n       background-color: #F0F0F0;\n}\n\n/* The SpeedScore dark blue color theme  */       \n.btncolortheme {\n      background-color: #13294E;\n      color: white;\n  }\n  \n/* The color theme when a bottom bar menu item is selected */\n.btnaltcolortheme {\n      background-color: #F0F0F0;\n      color: #13294E;\n  }\n\n/* change items to gray when disabled class is applied  */\n.disabled {\ncolor: gray;\n}\n  \n\n.btncolorthemeoutline {\n      border: 2px;\n      border-color: #13294E;\n      color: #13294E;\n}\n\n/* Styling for the divs in the app. Ensures that the content at top isn't obscured by top bar */\n.paddedPage {\npadding: 56px 8px 0px 8px;\n\n}\n\n.hide {\ndisplay:none;\n}\n\n\n.clickable-div \n{\ncursor: pointer;\n}\n\n/* Styling for mode bar at the bottom of the page */\n.modebar {\nbackground-color: #13294E;\noverflow: hidden;\nposition: fixed;\nbottom: 0;\nwidth: 100%;\nz-index: 100;\n}\n\n/* Style the links inside the bottom nav bar */\n.modebar a {\ndisplay: block;\nfloat: left;\nwidth: 32%;\ncolor: white;\ntext-align: center;\npadding: 2px 2px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Add a gray background color to the button when it is selected */\n.modebar a:active {\nbackground-color: #F0F0F0;\ncolor: #13294E;\n}\n\n/* Add a gray background color to button when it is hovered */\n.modebar a:hover {\nbackground-color: #F0F0F0;\ncolor: #13294E;\n}\n\n/* Hide the link that should open and close the navbar on small screens */\n.modebar .icon {\ndisplay: none;\n} \n\n/* Style the icons in the bottom bar */\n.modebaricon {\ndisplay:block; \npadding-top:3px;\n}\n\n/* Style the text in the bottom bar */\n.modebartext {\ndisplay:block;\nfont-size: small;\n}\n\n/* Style the floating action button, which is fixed in the lower right of the app */\n.float{\nposition:fixed;\nwidth:60px;\nheight:60px;\nbottom:60px;\nright:40px;\nbackground-color:#13294E;\ncolor:white;\nborder-radius:50px;\ntext-align:center;\nbox-shadow: 2px 2px 3px #999;\n}\n\n.my-float{\nmargin-top:22px;\n}\n\n.floatBtnDiv a:visited {\ncolor: white !important;\n}\n\n.floatBtnDiv a:active {\ncolor: white !important;\n}\n\nbody {\nmargin: 0;\n}\n\n/* This class disables a button */\n.disabledButton {\npointer-events: none;\nopacity: 0.4;\n}\n\n.floatButton a:visited {\ncolor: white !important;\n}\n\n.floatButton a:active {\ncolor: white !important;\n}\n\n/* Login page styling */\n.logintext {\ntext-align: center;\nwidth: 90%;\nheight: 10%;\nfont-size: 24px;\n}\n\n.loginbtn {\nwidth: 70%;\nfont-size: 36px;\n}\n\n/* Form styling */\n\n.form-center {\ntext-align: center;\n}\n",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass NavBar extends React.Component {\r\n    \r\n    render() {\r\n       return (\r\n        <div className=\"navbar\">  \r\n        <span className=\"navbar-items\">\r\n          <button className=\"sidemenu-btn\">\r\n            <span id=\"menuBtnIcon\" className=\"fa fa-bars sidemenu-btn-icon\">\r\n            </span>\r\n          </button>\r\n          <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n          width=\"38px\" />\r\n          <span className=\"navbar-title\">\r\n            &nbsp;{this.props.title}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div id =\"bottomBar\" className=\"modebar\">\r\n        <a className=\"modebar-btn\">\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className=\"modebarbtn\">\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a className=\"modebarbtn\">\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass SideMenu extends React.Component {\r\n    render() {\r\n       return (\r\n        <div className=\"sidemenu\">\r\n        {/* SIDE MENU TITLE */}\r\n        <div className=\"sidemenu-title\">\r\n            <img src='http://tiny.cc/chrisprofilepic' height='50' width='50' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;Chris\r\n            Hundhausen&nbsp;&nbsp;</span>\r\n        </div>\r\n        {/* MENU CONTENT */}\r\n        <div>\r\n        <h2></h2>\r\n        {/*BEGIN GROUP OF MODE/ACTION BUTTONS */}\r\n        {/*Mode-based menu items are contextual; they provide\r\n            easy access to most important functionality in current mode */}\r\n        <a className=\"menu-item\">\r\n          <span className=\"fa fa-list-alt\"></span>&nbsp;Feed</a>\r\n        <a className=\"menu-item\">\r\n          <span className=\"fa fa-user-friends\"></span>&nbsp;Followed Users</a>\r\n        <a id=\"allRoundsItem\" className=\"menu-item\">\r\n          <span className=\"fa fa-history\"></span>&nbsp;All Rounds</a>\r\n        <a id=\"logRoundItem\" className=\"menu-item\">\r\n          <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n        <a className=\"menu-item\" >\r\n          <span className=\"fa fa-flag\"></span>&nbsp;All Courses</a>\r\n        <a className=\"menu-item\">\r\n          <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n        {/* The following menu items are present regardless of mode */}\r\n        <a id=\"aboutBtn\" className=\"menu-item\">\r\n          <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n        <a id=\"logOutBtn\" className=\"menu-item\">\r\n          <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" hidden={true}>\r\n          <a>\r\n            <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n          </a>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "import React from 'react';\r\n\r\nclass LoginPage extends React.Component {\r\n    render() {\r\n        return(\r\n        <div id=\"login-mode-div\" className=\"padded-page\">\r\n        <center>\r\n            <h1 />\r\n            <form id=\"loginInterface\">\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className=\"fa fa-sign-in\"/>\r\n                &nbsp;Log In\r\n            </button>\r\n            <br />\r\n            <a role=\"button\" className=\"login-btn\">\r\n                <img src=\"https://drive.google.com/uc?export=view&id=1YXRuG0pCtsfvbDSTzuM2PepJdbBpjEut\" />\r\n            </a>\r\n            <a role=\"button\" className=\"login-btn\">\r\n                <img src=\"https://drive.google.com/uc?export=view&id=1ZoySWomjxiCnC_R4n9CZWxd_qXzY1IeL\" />\r\n            </a>\r\n            <p>\r\n                <i>Version CptS 489 Sp20</i>\r\n            </p>\r\n            <p>\r\n                <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n            </p>\r\n            </form>\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;\r\n",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			},
			{
				"pattern": {
					"type": "string",
					"expression": "/* INDEX.CSS -- The style definitions for the Speedgolf App. These are imported\n  in index.css for the entire app. */\n\n/* Styling of the fixed top bar in the app */\n.navbar {\n  overflow: hidden; /* Don't allow scrolling */\n  display: block; /* Occupies its own horizontal space */\n  background-color: #13294E;\n  position: fixed; /* Doesn't move */\n  top: 0;\n  width: 100%; /* 100% of width of screen */\n  align-content: center;\n  border-radius: 0px;\n  padding: 0px;\n  z-index: 100; /* Force it to be on top */\n}\n\n.navbar-title {\ncolor: white;\nfont-size: 18px;\n}\n\n/* navbarItems defines styling of items within navbar. They should be centered top-to-bottom\n with a small internal margin */\n.navbar-items {\ndisplay: inline-flex; \nalign-items: center; \npadding-top: 5px; \npadding-bottom: 5px;\n}\n\n/* sidemenu -- Styling of the side navigation menu */\n.sidemenu {\n  height: 100%; /* Menu is full height of window */\n  width: 0; /* Menu hidden -- will be opened on click */\n  position: fixed; /* Menu stays in place regardless of other content */\n  z-index: 150; /* Force the menu to be at front */\n  top: 48px; /* Position menu 48 px from top of screen; accomodates top navbar */\n  left: 0; /* Position the menu on the left hand side */\n  background-color: #13294E; /* Background color is dark blue */\n  overflow-x: hidden; /* Don't allow horizontal scroll */\n  transition: 0.5s; /* Animation transition time is 0.5 sec */\n  padding-top: 60px; /* Place menu content 60 px from top */\n}\n\n/* applies only to an anchor tag that's a child of a sidenav element. */\n.sidemenu a {\n      padding: 16px 8px 16px 32px;\n      text-decoration: none;\n      font-size: 16px;\n      color: white;\n      display: block;\n      transition: 0.3s;\n  }\n  \n\n.sidemenu div {\n      padding: 0px 0px 10px 6px;\n      text-decoration: none;\n      font-size: 16px;\n      color: white;\n      display: block;\n      transition: 0.3s;\n      /* border-bottom: 2px solid white; */\n  }\n\n/* Required ordering of link style definitions: visited, hover, active. If out of this order, they won't work!! */\n\n.sidemenu a:visited {\nbackground-color:  #13294E !important;\ncolor: white !important;\n}\n\n.sidemenu a:active {\nbackground-color:  #13294E !important;\ncolor: white !important;\n}\n\n\n/* Cascading style within a style: This definition applies only to sidenavtitle class defined in an \n element that's a child of sidenav element. */   \n.sidenmenu .sidemenu-title {\n      position: absolute;\n      width:100%;\n      top: 0px;\n      left: 0px;\n      padding: 0px 0px 0px 6px;\n      font-size: 18px;\n      margin-top: 20px;\n      margin-bottom: 20px !important;\n      border-bottom: 2px solid white;\n }\n\n .sidemenu .sidemenu-userID {\n   font-size: 14px;\n }\n\n/* side menu button styling */\n.sidemenu-btn {\nbackground-color: transparent;\nborder-color: #13294E;\ntext-align: center;\n}\n\n.sidemenu-btn-icon {\ncolor: white;\nfont-size: 30px;\ncursor: pointer;\ntext-align: center;\n}\n\n\n.sidemenu-item:hover {\n  cursor: default;\n  text-decoration: none;\n  color: #13294E !important;\n  background-color: #F0F0F0;\n}\n\n/* side menu styling when menu item selected */\n.sidemenu-item-selected {\n       pointer-events: none;\n       cursor: default;\n       text-decoration: none;\n       color: #13294E !important;\n       background-color: #F0F0F0;\n}\n\n/* The SpeedScore dark blue color theme  */       \n.btn-color-theme {\n      background-color: #13294E;\n      color: white;\n  }\n  \n/* The color theme when a bottom bar menu item is selected */\n.btn-alt-color-theme {\n      background-color: #F0F0F0;\n      color: #13294E;\n  }\n\n/* change items to gray when disabled class is applied  */\n.disabled {\ncolor: gray;\n}\n  \n\n.btn-color-theme-outline {\n      border: 2px;\n      border-color: #13294E;\n      color: #13294E;\n}\n\n/* Styling for the divs in the app. Ensures that the content at top isn't obscured by top bar */\n.padded-page {\npadding: 56px 8px 0px 8px;\n\n}\n\n.hide {\ndisplay:none;\n}\n\n\n.clickable-div \n{\ncursor: pointer;\n}\n\n/* Styling for mode bar at the bottom of the page */\n.modebar {\nbackground-color: #13294E;\noverflow: hidden;\nposition: fixed;\nbottom: 0;\nwidth: 100%;\nz-index: 100;\n}\n\n/* Style the links inside the bottom nav bar */\n.modebar a {\ndisplay: block;\nfloat: left;\nwidth: 32%;\ncolor: white;\ntext-align: center;\npadding: 2px 2px;\ntext-decoration: none;\nfont-size: 17px;\n}\n\n/* Add a gray background color to the button when it is selected */\n.modebar a:active {\nbackground-color: #F0F0F0;\ncolor: #13294E;\n}\n\n/* Add a gray background color to button when it is hovered */\n.modebar a:hover {\n  color: #F0F0F0;\n}\n\n/* Hide the link that should open and close the navbar on small screens */\n.modebar .icon {\ndisplay: none;\n} \n\n/* Style the icons in the bottom bar */\n.modebar-icon {\ndisplay:block; \npadding-top:3px;\n}\n\n/* Style the text in the bottom bar */\n.modebar-text {\ndisplay:block;\nfont-size: small;\n}\n\n/* Style the floating action button, which is fixed in the lower right of the app */\n.floatbtn {\nposition:fixed;\nwidth:60px;\nheight:60px;\nbottom:60px;\nright:40px;\nbackground-color:#13294E;\ncolor:white;\nborder-radius:50px;\ntext-align:center;\nbox-shadow: 2px 2px 3px #999;\n}\n\n.floatbtn-icon{\nmargin-top:22px;\n}\n\n.floatbtn a:visited {\ncolor: white !important;\n}\n\n.floatbtn a:active {\ncolor: white !important;\n}\n\nbody {\nmargin: 0;\n}\n\n/* This class disables a button */\n.disabled-button {\npointer-events: none;\nopacity: 0.4;\n}\n\n.floatbtn a:visited {\ncolor: white !important;\n}\n\n.floatbtn a:active {\ncolor: white !important;\n}\n\n/* Login page styling */\n.login-text {\ntext-align: center;\nwidth: 90%;\nheight: 10%;\nfont-size: 24px;\n}\n\n.login-btn {\nwidth: 70%;\nfont-size: 36px;\n}\n\n/* Form styling */\n\n.form-center {\ntext-align: center;\n}\n",
					"ignoreCase": false,
					"wholeMatch": false
				},
				"color": "yellow"
			}
		]
	}
}